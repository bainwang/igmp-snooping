/************************************************************
  Copyright (C), 1988-2014, xxxxx Tech. Co., Ltd.
  FileName:
  Author:  wangbin      Version :  1.0        Date:2014-2-11
  Description:                   
  Version:                        
  History:        
                  
    1. Date:
       Author:
       Modification:
    2. ...
***********************************************************/

#ifndef __bc_modules_h__
#define __bc_modules_h__

#include "bc_common_defs.h"

#define BC_MODULE_NAME_LENGTH               32
/*
BC_MODULE_SYSTEM
BC_MODULE_VLAN
BC_MODULE_PORT
BC_MODULE_QOS
BC_MODULE_ONU_CLS  //5

BC_MODULE_DBA  
BC_MODULE_STP
BC_MODULE_STATS
BC_MODULE_IGMP
BC_MODULE_ALARM //10

BC_MODULE_ACL 
BC_MODULE_MPCP
BC_MODULE_OAM
BC_MODULE_PSG
BC_MODULE_MIRROR //15

BC_MODULE_TRUNK 
BC_MODULE_P2P
BC_MODULE_BCMP
BC_MODULE_CLI
BC_MODULE_SNMP	//20

BC_MODULE_TRAP  
BC_MODULE_WEB
BC_MODULE_PLATFORM
BC_MODULE_UTILI
BC_MODULE_PRINT //25

BC_MODULE_IPC 
BC_MODULE_SESSION
BC_MODULE_FS
BC_MODULE_FILETRANS
BC_MODULE_BOARD //30

BC_MODULE_VFS  
BC_MODULE_SWAP
BC_MODULE_FDB
BC_MODULE_LOG
BC_MODULE_PKT //35

BC_MODULE_ACCOUNT  
BC_MODULE_INTF
BC_MODULE_STORMCTRL
BC_MODULE_RATECTRL
BC_MODULE_PORTISO //40

BC_MODULE_SNTP  
BC_MODULE_ONUMGMT
BC_MODULE_PING
BC_MODULE_8022
BC_MODULE_SWCHIP //45

BC_MODULE_CFGMGMT 
BC_MODULE_USERMGMT
BC_MODULE_TEMP
BC_MODULE_MEM
BC_MODULE_FAN //50

BC_MODULE_PWR  
BC_MODULE_LWIP
BC_MODULE_L3
BC_MODULE_EDFA
*/


/* note: 模块间隔是为了给某些模块加入子模块部分做的扩展保留 */
#define BC_MODULE_INTERVAL  		0x10000

/* note: 添加新模块ID时，需要在bc_modules.c中添加对应信息 */
typedef enum
{
	BC_FIRST_MODULE 			= 0, 

	BC_MODULE_SYSTEM 			= BC_MODULE_INTERVAL + BC_FIRST_MODULE,
		BC_MODULE_SYSTEM_PCPS,
			BC_MODULE_SYSTEM_PCPS_CLIENT,
			BC_MODULE_SYSTEM_PCPS_SERVER,
			BC_MODULE_SYSTEM_PCPS_DEV_FAN,
			BC_MODULE_SYSTEM_PCPS_DEV_POWER,
			BC_MODULE_SYSTEM_PCPS_DEV_EDFA,
			BC_MODULE_SYSTEM_PCPS_DISPATCHER,
			BC_MODULE_SYSTEM_PCPS_DRV_RS485,

	BC_MODULE_VLAN 				= BC_MODULE_INTERVAL + BC_MODULE_SYSTEM,
		BC_MODULE_VLAN_DRV,
		BC_MODULE_VLAN_DRV_BCM56540,
		BC_MODULE_VLAN_DRV_CS8022,
		BC_MODULE_VLAN_CLI,
		BC_MODULE_VLAN_DB,
		BC_MODULE_VLAN_SNMP,

	
		BC_MODULE_VLAN_ONU,
		BC_MODULE_VLAN_ONU_CLI,
		BC_MODULE_VLAN_ONU_OAM,
		BC_MODULE_VLAN_ONU_DB,
		
	BC_MODULE_PORT 				= BC_MODULE_INTERVAL + BC_MODULE_VLAN,
		BC_MODULE_PORT_SYS,
		BC_MODULE_PORT_DB,
		BC_MODULE_PORT_DRV,
		BC_MODULE_PORT_DRV_BCM56540,
		BC_MODULE_PORT_DRV_CS8022,
		BC_MODULE_PORT_CLI,
		BC_MODULE_PORT_UNI,
		
	BC_MODULE_QOS 				= BC_MODULE_INTERVAL + BC_MODULE_PORT,
		BC_MODULE_QOS_MAP,
		BC_MODULE_QOS_POLICY,
	
	BC_MODULE_ONU_CLS			= BC_MODULE_INTERVAL + BC_MODULE_QOS,
	
	BC_MODULE_DBA				= BC_MODULE_INTERVAL + BC_MODULE_ONU_CLS,
	
	BC_MODULE_STP 				= BC_MODULE_INTERVAL + BC_MODULE_DBA,

		BC_MODULE_STP_DRV,
			BC_MODULE_STP_DRV_BCM,
				BC_MODULE_STP_DRV_BCM_DEBUG,
			BC_MODULE_STP_DRV_CS,

		BC_MODULE_STP_API,
			BC_MODULE_STP_API_SERVER,
			BC_MODULE_STP_API_COMMON,
			BC_MODULE_STP_API_CLIENT,
			BC_MODULE_STP_API_RX,
			BC_MODULE_STP_API_CALLBACK,

		BC_MODULE_STP_PROT,
			BC_MODULE_STP_PROT_IPI,
				BC_MODULE_STP_PROT_IPI_THREAD,
				BC_MODULE_STP_PROT_IPI_API,

				BC_MODULE_STP_PROT_IPI_CALL,
				BC_MODULE_STP_PROT_IPI_NSM_CLIENT,
				BC_MODULE_STP_PROT_IPI_BPDU_RX,
				BC_MODULE_STP_PROT_IPI_BPDU_PARSE,
				BC_MODULE_STP_PROT_IPI_BPDU_TX,
				BC_MODULE_STP_PROT_IPI_BPDU_SET_TC,
				BC_MODULE_STP_PROT_IPI_BPDU_PROCESS,
				BC_MODULE_STP_PROT_IPI_MSTI_PROTO,
				BC_MODULE_STP_PROT_IPI_ROLE_CIST,
				BC_MODULE_STP_PROT_IPI_ROLE_MSTI,
				BC_MODULE_STP_PROT_IPI_STAT_CIST,
				BC_MODULE_STP_PROT_IPI_STAT_MSTI,

	BC_MODULE_STATS 			= BC_MODULE_INTERVAL + BC_MODULE_STP,
	BC_MODULE_IGMP 				= BC_MODULE_INTERVAL + BC_MODULE_STATS,
	    BC_MODULE_IGMP_CLI,
	     BC_MODULE_IGMP_DRV,
	    
	BC_MODULE_ALARM 			= BC_MODULE_INTERVAL + BC_MODULE_IGMP,
		BC_MODULE_ALARM_CLI,
		BC_MODULE_ALARM_API,
		BC_MODULE_ALARM_THREAD,
		
	BC_MODULE_ACL 				= BC_MODULE_INTERVAL + BC_MODULE_ALARM,
		BC_MODULE_ACL_CLI,
		BC_MODULE_ACL_API,
		BC_MODULE_ACL_DRV,
		
	BC_MODULE_MPCP 				= BC_MODULE_INTERVAL + BC_MODULE_ACL,
	
	BC_MODULE_OAM 				= BC_MODULE_INTERVAL + BC_MODULE_MPCP,
		BC_MODULE_OAM_API,
		BC_MODULE_OAM_API_SERVER,
		BC_MODULE_OAM_API_CLIENT,
		BC_MODULE_OAM_EVENT,
		BC_MODULE_OAM_UPGRADE,

	BC_MODULE_PSG 				= BC_MODULE_INTERVAL + BC_MODULE_OAM,
		BC_MODULE_PSG_DRV,
		BC_MODULE_PSG_CLI,
		
	BC_MODULE_MIRROR 			= BC_MODULE_INTERVAL + BC_MODULE_PSG,
	BC_MODULE_TRUNK 			= BC_MODULE_INTERVAL + BC_MODULE_MIRROR,
	BC_MODULE_TRUNK_DRV,

	
	BC_MODULE_P2P 				= BC_MODULE_INTERVAL + BC_MODULE_TRUNK,
	BC_MODULE_BCMP 				= BC_MODULE_INTERVAL + BC_MODULE_P2P,

	BC_MODULE_CLI 				= BC_MODULE_INTERVAL + BC_MODULE_BCMP,
		BC_MODULE_CLI_KERNEL,
		BC_MODULE_CLI_KERNEL_ALIAS,
		BC_MODULE_CLI_KERNEL_CORE,
		BC_MODULE_CLI_KERNEL_EDIT,
		BC_MODULE_CLI_KERNEL_MAINPROCESS,
		BC_MODULE_CLI_KERNEL_PARA,
		BC_MODULE_CLI_KERNEL_VIO,
		BC_MODULE_CLI_KERNEL_VT100,
		BC_MODULE_CLI_KERNEL_SYS_CMD,
		BC_MODULE_CLI_KERNEL_BNR,
		BC_MODULE_CLI_KERNEL_BNR_CMD,
		BC_MODULE_CLI_KERNEL_PSEUDO,
		BC_MODULE_CLI_CMDS,
		BC_MODULE_CLI_CMD_BASE,
		BC_MODULE_CLI_CMD_DEMOMODULE,
		BC_MODULE_CLI_CMD_FDB,
		BC_MODULE_CLI_CMD_FDB_DBG,
		BC_MODULE_CLI_CMD_PCPS,
		BC_MODULE_CLI_CMD_PCPS_DBG,
		BC_MODULE_CLI_CMD_STP,
		BC_MODULE_CLI_CMD_STP_DBG,
		BC_MODULE_CLI_CMD_IPCDEBUG,
		BC_MODULE_CLI_CMD_ACL,
		BC_MODULE_CLI_CMD_DBA,
		BC_MODULE_CLI_CMD_QOS,
		BC_MODULE_CLI_CMD_IGMP,
		BC_MODULE_CLI_CMD_OAM,
		BC_MODULE_CLI_CMD_OAM_DBG,

	BC_MODULE_SNMP 				= BC_MODULE_INTERVAL + BC_MODULE_CLI,
	BC_MODULE_TRAP 				= BC_MODULE_INTERVAL + BC_MODULE_SNMP,
	BC_MODULE_WEB 				= BC_MODULE_INTERVAL + BC_MODULE_TRAP,
	
	BC_MODULE_PLATFORM			= BC_MODULE_INTERVAL + BC_MODULE_WEB,
		BC_MODULE_PLATFORM_UART,
		BC_MODULE_PLATFORM_CLOCK_CLI,
		BC_MODULE_PLATFORM_MONITOR_CLI,
		BC_MODULE_PLATFORM_DEBUG_CLI,
		BC_MODULE_PLATFORM_I2C,
	
	BC_MODULE_UTILI				= BC_MODULE_INTERVAL + BC_MODULE_PLATFORM,
	BC_MODULE_PRINT				= BC_MODULE_INTERVAL + BC_MODULE_UTILI,
	BC_MODULE_IPC				= BC_MODULE_INTERVAL + BC_MODULE_PRINT,
		BC_MODULE_IPC_TRANS,
	BC_MODULE_SESSION			= BC_MODULE_INTERVAL + BC_MODULE_IPC,
	BC_MODULE_FS				= BC_MODULE_INTERVAL + BC_MODULE_SESSION,    /* no use, replaced by BC_MODULE_VFS */
	BC_MODULE_FILETRANS			= BC_MODULE_INTERVAL + BC_MODULE_FS,
	BC_MODULE_BOARD				= BC_MODULE_INTERVAL + BC_MODULE_FILETRANS,
	BC_MODULE_VFS				= BC_MODULE_INTERVAL + BC_MODULE_BOARD,
	BC_MODULE_SWAP				= BC_MODULE_INTERVAL + BC_MODULE_VFS,

	BC_MODULE_FDB				= BC_MODULE_INTERVAL + BC_MODULE_SWAP,
		BC_MODULE_FDB_DRV,
		BC_MODULE_FDB_DRV_UTIL,
		BC_MODULE_FDB_DRV_BCM,
		BC_MODULE_FDB_DRV_BCM_DBG,
		BC_MODULE_FDB_DRV_CS8022,
		BC_MODULE_FDB_DRV_CS8022_DBG,
		BC_MODULE_FDB_API_SERVER,
		BC_MODULE_FDB_API_SERVER_CS8022_DBG,
		BC_MODULE_FDB_API_CLIENT,
		BC_MODULE_FDB_API_CLIENT_CS8022_DBG,

	BC_MODULE_LOG				= BC_MODULE_INTERVAL + BC_MODULE_FDB,
	BC_MODULE_PKT				= BC_MODULE_INTERVAL + BC_MODULE_LOG,
	BC_MODULE_ACCOUNT	= BC_MODULE_INTERVAL + BC_MODULE_PKT,            /* no use, replaced by BC_MODULE_USERMGMT */
	BC_MODULE_INTF			= BC_MODULE_INTERVAL + BC_MODULE_ACCOUNT,
		BC_MODULE_INTF_DBG,
	BC_MODULE_STORMCTRL = BC_MODULE_INTERVAL + BC_MODULE_INTF,
	BC_MODULE_RATECTRL = BC_MODULE_INTERVAL + BC_MODULE_STORMCTRL,
	BC_MODULE_PORTISO	= BC_MODULE_INTERVAL + BC_MODULE_RATECTRL,
	BC_MODULE_SNTP			= BC_MODULE_INTERVAL + BC_MODULE_PORTISO,
	BC_MODULE_ONUMGMT 	= BC_MODULE_INTERVAL + BC_MODULE_SNTP,
	BC_MODULE_PING 			= BC_MODULE_INTERVAL + BC_MODULE_ONUMGMT,
	BC_MODULE_8022			= BC_MODULE_INTERVAL + BC_MODULE_PING,
	BC_MODULE_SWCHIP		= BC_MODULE_INTERVAL + BC_MODULE_8022,
	BC_MODULE_CFGMGMT	= BC_MODULE_INTERVAL + BC_MODULE_SWCHIP,
	BC_MODULE_USERMGMT	= BC_MODULE_INTERVAL + BC_MODULE_CFGMGMT,
	BC_MODULE_TEMP		= BC_MODULE_INTERVAL+BC_MODULE_USERMGMT,
	BC_MODULE_MEM		= BC_MODULE_INTERVAL+BC_MODULE_TEMP,
	BC_MODULE_FAN			= BC_MODULE_INTERVAL + BC_MODULE_MEM,
	BC_MODULE_PWR			= BC_MODULE_INTERVAL + BC_MODULE_FAN,
	BC_MODULE_LWIP			= BC_MODULE_INTERVAL + BC_MODULE_PWR,
	BC_MODULE_L3			= BC_MODULE_INTERVAL + BC_MODULE_LWIP,
	BC_MODULE_EDFA     = BC_MODULE_INTERVAL + BC_MODULE_L3,
    BC_LAST_MODULE				= BC_MODULE_INTERVAL + BC_MODULE_EDFA,
	} bc_modules_e;

#define BC_MODULES_NUM (BC_LAST_MODULE/BC_MODULE_INTERVAL)

/*************************************************
  Function: bc_modules_get_module_name
  Description: get the module name
  Input: 
  			module_id:	module id
  Output:
  			NULL
  Return:
  			if module id exist 
  			    return module name
  			else
  			    return NULL
  Note:           
  History:        
    1. Date:
       Author:
       Modification:
*************************************************/
extern bc_char *bc_modules_get_module_name(bc_modules_e module_id);

/*************************************************
  Function: bc_modules_valid_id
  Description: check the module id is whether or not valid
  Input: 
  			module_id:	module id
  Output:
  			NULL
  Return:
  			if equal BC_ERR_OK: valid
  			else: invalid
  Note:           
			the module id check:
				1. the module range
				2. module id % BC_MODULE_INTERVAL == 0
*************************************************/
extern bc_int32 bc_modules_valid_id(bc_modules_e module_id);

#endif

